namespace: invoiceninja-application

_shared_config:
  hostname: &hostname invoiceninja-application.staging.k8s.webgrip.nl
  url: &url https://invoiceninja-application.staging.k8s.webgrip.nl

application:
  enabled: true

  controllers:
    main:
      pod:
        securityContext:
          runAsNonRoot: true
          seccompProfile: { type: RuntimeDefault }
          fsGroup: 1500
          fsGroupChangePolicy: OnRootMismatch
      containers:
        app:
          securityContext:
            runAsUser: 1500
            runAsGroup: 1500
            allowPrivilegeEscalation: false
          image:
            repository: docker.io/webgrip/invoiceninja-application
            tag: "latest"
            pullPolicy: Always
          resources:
            requests: { cpu: "250m", memory: "512Mi" }
            limits: { cpu: "1000m", memory: "1Gi" }
          probes:
            readiness:
              enabled: true
              custom: true
              spec:
                exec:
                  command:
                    [
                      "sh",
                      "-c",
                      "php -v >/dev/null && nc -z 127.0.0.1 9000 && nc -z invoiceninja-application-mariadb 3306 && nc -z invoiceninja-application-redis-master 6379",
                    ]
                initialDelaySeconds: 10
                periodSeconds: 10
          env:
            - name: APP_ENV
              value: production
            - name: APP_DEBUG
              value: "false"
            - name: APP_URL
              value: *url
            - name: APP_KEY
              valueFrom:
                secretKeyRef:
                  name: invoiceninja-application-secrets
                  key: app-key
            - name: APP_LOCALE
              value: en
            - name: APP_FALLBACK_LOCALE
              value: en
            - name: APP_TIMEZONE
              value: Europe/Amsterdam
            - name: APP_NAME
              value: "invoiceninja-application"
            - name: DB_TYPE
              value: mysql
            - name: DB_CONNECTION
              value: mysql
            - name: DB_STRICT
              value: "false"
            - name: DB_HOST
              value: invoiceninja-application-mariadb
            - name: DB_PORT
              value: "3306"
            - name: DB_DATABASE
              value: invoiceninja-application
            - name: DB_USERNAME
              value: invoiceninja-application
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: invoiceninja-application-secrets
                  key: mariadb-password
            - name: API_SECRET
              valueFrom:
                secretKeyRef:
                  name: invoiceninja-application-secrets
                  key: api-secret
            - name: REDIS_HOST
              value: invoiceninja-application-redis-master
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: invoiceninja-application-secrets
                  key: redis-password
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PREFIX
              value: invoiceninja-application_
            - name: REDIS_CLIENT
              value: predis
            - name: TRUSTED_PROXIES
              value: "**"
            - name: FORCE_HTTPS
              value: "true"
            - name: SESSION_DRIVER
              value: redis
            - name: CACHE_DRIVER
              value: redis
            - name: QUEUE_CONNECTION
              value: redis
            - name: MAIL_MAILER
              value: log
            - name: LOG_CHANNEL
              value: stderr
            - name: LOG_LEVEL
              value: info

        web:
          image:
            repository: nginxinc/nginx-unprivileged
            tag: 1.29.1-alpine3.22-perl
          securityContext:
            runAsUser: 101
            runAsGroup: 101
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          ports:
            - name: http
              containerPort: 8080
          resources:
            requests: { cpu: "100m", memory: "128Mi" }
            limits: { cpu: "300m", memory: "256Mi" }
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet: { path: /health, port: http }
                initialDelaySeconds: 5
                periodSeconds: 10
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet: { path: /health, port: http }
                initialDelaySeconds: 2
                periodSeconds: 5

  service:
    main:
      controller: main
      ports:
        http:
          port: 80
          targetPort: http

  ingress:
    main:
      enabled: true
      className: ingress-traefik
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-traefik
        traefik.ingress.kubernetes.io/router.middlewares: |
          ingress-traefik-ryan-home-ip-allow-list@kubernetescrd
      hosts:
        - host: *hostname
          paths:
            - path: /
              service:
                identifier: main
                port: http
      tls:
        - hosts:
            - *hostname
          secretName: letsencrypt-invoiceninja-application

  persistence:
    storage:
      type: persistentVolumeClaim
      enabled: true
      accessMode: ReadWriteOnce
      size: 2Gi
      storageClass: do-block-storage
      globalMounts:
        - path: /var/www/app/storage
    nginx-conf:
      type: configMap
      enabled: true
      name: invoiceninja-application
      globalMounts:
        - path: /etc/nginx/conf.d
          readOnly: true

  configMaps:
    nginx:
      enabled: true
      data:
        default.conf: |
          map $http_x_forwarded_proto $fastcgi_https { default ''; https on; }
          server {
            listen 8080;
            root /var/www/app/public;
            index index.php index.html;
            location = /health { return 200 'ok'; add_header Content-Type text/plain; }
            client_max_body_size 25m;
            fastcgi_connect_timeout 5s;
            fastcgi_send_timeout 120s;
            fastcgi_read_timeout 120s;
            location / { try_files $uri /index.php?$query_string; }
            location ~ \.php$ {
              include fastcgi_params;
              fastcgi_pass 127.0.0.1:9000;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              fastcgi_param HTTP_X_FORWARDED_PROTO $http_x_forwarded_proto;
              fastcgi_param HTTP_X_FORWARDED_HOST  $http_x_forwarded_host;
              fastcgi_param HTTP_X_FORWARDED_FOR   $http_x_forwarded_for;
              fastcgi_param HTTPS                  $fastcgi_https;
            }
          }

redis:
  image:
    repository: bitnamilegacy/redis
    tag: "8.2.1"
    pullPolicy: IfNotPresent
  auth:
    enabled: true
    existingSecret: invoiceninja-application-secrets
    passwordKey: redis-password
  architecture: replication
  master:
    persistence:
      enabled: true
      size: 1Gi
    disableCommands:
      - FLUSHDB
      - FLUSHALL
      - CONFIG
      - KEYS
  replica:
    replicaCount: 0

mariadb:
  image:
    repository: bitnamilegacy/mariadb
    tag: "12.0.2"
    pullPolicy: IfNotPresent
  enabled: true
  auth:
    # rootPassword: "" # ignored when existingSecret is set
    database: invoiceninja-application
    username: invoiceninja-application
    # password: "" # ignored when existingSecret is set
    existingSecret: invoiceninja-application-secrets
  primary:
    persistence:
      enabled: true
      storageClass: do-block-storage
      size: 2Gi
